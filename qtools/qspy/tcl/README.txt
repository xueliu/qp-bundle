About this Directory
====================
This directory contains the Tcl/Tk scripts that implement the "qspyview"
GUI front-end for the QSPY software tracing "back-end" utility.

General Requirements
====================
The "front-end" Tcl scripts require Tcl/Tk with the UDP extension,
which is available in the Qtools collection for Windows.

To launch any of the scripts in this directory, you need to first run
the QSPY console application (version 5.9.x or higher) with the -u option
(the -u option opens up the UDP socket for attaching "front-ends").
Once QSPY is running, you can "attach" to the UDP socket and start
communicating with the QSPY back-end or to the Target (through QSPY).


Using qspyview.tcl
==================
The "qspyview.tcl" script is an example of a GUI front-end. The purpose
of this script is to provide a GUI for your embedded application runnin
on the host computer (Windows, Linux, MacOS).

The usage of the "qspyview.tcl" script is as follows:

wish qspyview.tcl [extension_script] [host_ip]

where:
[extension_script] - optional specification of the extension scripts
                 that customizes QSpyView for a particular project.
                 If not specified, the "default.tcl" extension script
                 is used that provides empty placeholders for all QS
                 trace records and commands that you can receive from
                 and send to the QS Target component.

[host_ip]      - optional IP-address:port for the host running the QSpy


Customizing QSPYview
--------------------
The qspyview.tcl script provides also a basic mechanism to customize the
behavior for specific projects. To customize the behavior you need to copy
and modify the default.tcl script. The modified script should be renamed
to the specific project and used as an additional command parameter to the
qspyview.tcl script. For example, the directory

<qpc>\examples\arm-cm\dpp_ek-tm4c123gxl\qspy

contains the customization dpp.tcl, which handles specific QS records
generated by the dpp example application for the EK-TM4C123GXL board.
To launch this example, change to the directory just mentioned and type

wish qspyview.tcl dpp.tcl


The qspy.tcl package
====================
The script qspy.tcl encapsulates the basic communication protocol with
the QSPY back-end. Based on this functionality, you can write your own
Tcl scripts to exercise the Target.


More Information
================
More information about the QP/QSPY software tracing system is available
online at:

https://www.state-machine.com/qtools/qpspy.html

More information about the QSpyView visualization and monitoring
is available online at:

https://www.state-machine.com/qtools/qspyview.html

