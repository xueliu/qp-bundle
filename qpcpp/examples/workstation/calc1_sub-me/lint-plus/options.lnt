//////////////////////////////////////////////////////////////////////////////
// Product: PC-Lint-Plus options for linting QP/C++ applications, GNU-ARM
// Last updated for version 6.7.0
// Last updated on  2019-12-26
//
//                    Q u a n t u m  L e a P s
//                    ------------------------
//                    Modern Embedded Software
//
// Copyright (C) 2005-2019 Quantum Leaps. All rights reserved.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Alternatively, this program may be distributed and modified under the
// terms of Quantum Leaps commercial licenses, which expressly supersede
// the GNU General Public License and are specifically designed for
// licensees interested in retaining the proprietary status of their code.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <www.gnu.org/licenses>.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// general options
-unit_check        // perform only subset check (suppresses Global Wrapup)
-max_threads=1     // suppress message "no '-max_threads=N' option"
//-vf              // print names of all source files (for debugging linting)

// include directories
-i..              // application includes
-i%QPCPP%\include // QP/C++ public includes
-i%QPCPP_LINT%    // QP/C++ lint "port"
-i%QPCPP_LINT%\qk // QP/C++ lint "port" to QK

// size options corresponding to GNU-ARM
-si4 -sl4 -sll8 -ss2 -sw4 -sp4 -sf4 -sd8 -sld8 +fzl

// underlying type for enums is always 'int'
+fei

// standards
%QPCPP_LINT%\au-misra-cpp.lnt  // MISRA-C++:2008
%QPCPP_LINT%\au-ds.lnt         // Dan Saks recommendations
//-strong(AXJ)      // Strong type checking

/////////////////////////////////////////////////////////////////////////////
// QP/C++ options for clients
qpcpp.lnt         // QP/C++ options

/////////////////////////////////////////////////////////////////////////////
// addtitional supporession rules for bulding this application

// local struct member not referenced
-esym(754,
 Calc::*)
